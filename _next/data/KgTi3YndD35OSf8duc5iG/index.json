{"pageProps":{"data":[{"id":"2021-02-28","content":"<p>ちょっとしたことを書いておくページが欲しいなと思い、Wiki っぽい感じのこともできるようにしてみた。</p>\n<p><a href=\"https://www.npmjs.com/package/remark-wiki-link\">remark-wiki-link</a> を使って <code>[[JavaScript]]</code> みたいに書くとリンクが貼られる感じ。</p>\n<p><a class=\"internal new\" href=\"/w/TypeScript\">TypeScript</a> というか <a class=\"internal new\" href=\"/w/JavaScript\">JavaScript</a> がまだまだぎこちない。<br>\n現在の年ってどう取得するんだろう。<code>const date = new Date(); const year = date.getFullYear()</code> か。みたいな、どんなライブラリがあってどう使うのかみたいな、ちょっとしたことをいくつも調べながら作業してる。</p>\n<p><a href=\"https://github.co.jp/features/actions\">GitHub Actions</a> でデプロイしているんだけど、Next.js のビルドで警告が出ていた。</p>\n<pre><code>warn  - No build cache found. Please configure build caching for faster rebuilds. Read more: https://err.sh/next.js/no-cache\n</code></pre>\n<p>キャッシュしておいた方が良いみたいなので、しておく。</p>\n<pre><code>uses: actions/cache@v2\nwith:\n  path: ${{ github.workspace }}/.next/cache\n  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}\n</code></pre>\n<p>ついでに <code>yarn install</code> あたりも重そうなのでキャッシュする方法を調べた。</p>\n<p><a href=\"https://dev.to/mpocock1/how-to-cache-nodemodules-in-github-actions-with-yarn-24eh\">How to cache node_modules in GitHub Actions with Yarn</a> を参考にした。</p>\n<pre><code>- uses: actions/cache@v2\n  with:\n    path: '**/node_modules'\n    key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}\n</code></pre>\n<p>ちなみに、やってる内容はまったく意味が分かっていない。コピペしただけなんで。<a href=\"https://github.co.jp/features/actions\">GitHub Actions</a> についても調べないといけないんだろうけど、また今度…</p>\n"},{"id":"2021-02-27","content":"<p><a href=\"https://nextjs.org/\">Next.js</a> を調べながらサイトを構築している。</p>\n<p><a class=\"internal new\" href=\"/w/JavaScript\">JavaScript</a> も <a class=\"internal new\" href=\"/w/TypeScript\">TypeScript</a> も何も分からん状態だけど、<a href=\"https://nextjs.org/\">Next.js</a> というか <a href=\"https://ja.reactjs.org/\">React</a> が楽しい。コンポーネントを組み合わせて作っていく感覚がなんか気持ち良い。</p>\n"}]},"__N_SSG":true}