{"pageProps":{"data":[{"id":"2021-03-04","content":"RSSをつけてみたい。\n\n[[Next.js]]でRSS生成ができるのか調べていた。見つけた方法は2つ。\n\n1. `getServerSideProps()`を使ってSSRする。\n2. ビルド時に別処理でRSSファイルを生成する。\n\n1.の方はサーバの用意が大変そうなのでやりたくない。2.になるんだけど、すでに[[Next.js]]で同じような処理をやっているので、なんとかまとめたいと思っているんだけど、思いつかない。\n\nRSS生成は`yarn export:rss`ってやると`./out/rss.xml`が出力される感じにしたい。できれば[[TypeScript]]で書きたいんだけど、コンパイルとかもろもろ面倒なので素の[[JavaScript]]で書くことにしてみる。それなら`node gen-rss.js`で済む。\n\n```package.json\n\"scripts\": {\n  ...\n  \"export:rss\": \"node gen-rss.js\",\n  ...\n},\n```\n\nあとは[[Next.js]]でもやったような、Markdownファイル群をHTMLに変換してRSSファイルを生成する――同じような処理を何度も書くの嫌だなあ。\n\nhttps://github.com/te9yie/te9yie.github.io/blob/main/gen-rss.js\n\n[ReactDOMServer](https://ja.reactjs.org/docs/react-dom-server.html)使ってComponentsを使い回せないかと思ったんだが、コンパイル後`.js`が散らばったり`tsconfig.json`をどこに置けば良いのか分からないやらで、今の自分の知識では厳しそうだった。\n\nあとは[[GitHub Actions]]のワークフローに組み込んで完成。うまく動いているといいなあ。\n"},{"id":"2021-03-03","content":"検索機能をつけたい。Google検索ができればよいと思い設定してみる。\n\n[Programmable Search Engine](https://programmablesearchengine.google.com/)\n\n下記のコードをコピーして貼り付けてくれ、といわれたままやると`<div>`自体が見えなくなってうまく動かなかった。\n\n```html\n<script async src=\"https://cse.google.com/cse.js?cx=c961937a8b4f96e3d\"></script>\n<div class=\"gcse-search\"></div>\n```\n\nまあ[[React]]だから`<script>`あたりの処理がうまく動かないのかなと思った。\n\n`useEffect`で対応してみた。\n\n```typescript\nconst SearchBox: React.FC = () => {\n  const searchBoxRef = React.createRef<HTMLDivElement>();\n  useEffect(() => {\n    if (searchBoxRef && searchBoxRef.current) {\n      const searchBox = searchBoxRef.current;\n      const parent = searchBox.parentNode;\n      const gcse = document.createElement(\"script\");\n      gcse.async = true;\n      gcse.src = \"https://cse.google.com/cse.js?cx=c961937a8b4f96e3d\";\n      parent?.insertBefore(gcse, searchBox);\n    }\n  });\n  return (\n    <div className=\"search-box\">\n      <div ref={searchBoxRef} className=\"gcse-search\"></div>\n    </div>\n  );\n};\n```\n\nあと余白が大きくて邪魔だったのでCSSも書いた。\n\n```css\n.gsc-control-cse {\n    padding: 0 !important;\n}\n```\n"},{"id":"2021-03-02","content":"引き続き[[JavaScript]]の勉強。\n\n[関数とthis · JavaScript Primer #jsprimer](https://jsprimer.net/basic/function-this/)を読んだ。\n\nアロー関数では`this`は静的スコープで解決され、それ以外の関数では暗黙の引数で`this`が渡されるようだ。`var`の変数の巻き上げ挙動も怖い。知らないと色々罠がありそうだ。\n\n[[TypeScript]]を学ぶにしても、基本のJavaScriptの知識がないとダメなことが分かった。\n\n---\n\n開発環境として[[Docker]]を使ってみることにした。[[VS Code]]から簡単に扱えるようなので試している。\n\n[Developing inside a Container using Visual Studio Code Remote Development](https://code.visualstudio.com/docs/remote/containers)\n\nWindowsで`git clone`してRemote Containerで開いたらファイルが軒並み変更がかかった。どうも改行コードらへんの扱いが怪しいらしい。と思ったら、そのものの解説があった。\n\n[Visual Studio Code Remote Development Troubleshooting Tips and Tricks](https://code.visualstudio.com/docs/remote/troubleshooting#_resolving-git-line-ending-issues-in-containers-resulting-in-many-modified-files)\n\n`.gitattributes`を追加することにした。\n\n```gitattributes\n* text=auto eol=lf\n```\n\n---\n\nいや、Windows上で`git clone`せずに[[WSL]]上でやって、そこからRemove Containerを使うと大丈夫だ。\n"}]},"__N_SSG":true}